using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using MySql.Data;
using MySql.Data.MySqlClient;
using System.Windows;

namespace SistemaEMMG_Alpha
{
    public struct TiposEntidadesData
    {
        public TiposEntidadesData(long id, string nom)
        {
            te_id = id;
            te_nombre = nom; //Event handler to check that nom is not longer than 32 characters
        }
        public long te_id { get; set; }
        public string te_nombre { get; set; }

        public override string ToString()
        {
            return $"ID: {te_id} - Tipo Entidad: {te_nombre}";
        }
    }

    public class DBTipoEntidad : DBInterface
    {
        private TiposEntidadesData _data;

        public DBTipoEntidad(TiposEntidadesData newData)
        {
            _data = newData;
        }

        public DBTipoEntidad(long id, string nombre) : this(new TiposEntidadesData(id, nombre)) { }

        public DBTipoEntidad(string nombre) : this(-1, nombre) { }

        public DBTipoEntidad(MySqlConnection conn, int id)
        {
            try
            {
                string query = $"SELECT * FROM tipos_entidades WHERE te_id = {id}";
                var cmd = new MySqlCommand(query, conn);
                var reader = cmd.ExecuteReader();

                while (reader.Read())
                {
                    _data = new TiposEntidadesData(reader.GetInt64("te_id"), reader.GetString("te_nombre"));
                }

                reader.Close();
            } catch (Exception ex)
            {
                MessageBox.Show("Error en el constructo de DBTipoEntidad, problemas con la consulta SQL: " + ex.Message, "Exception Sample", MessageBoxButton.OK, MessageBoxImage.Warning);
            }
        }

        public bool PushToDatabase(MySqlConnection conn)
        {
            bool wasAbleToPush = false;
            try
            {
                //First check if the record already exists in the DB
                string query = $"SELECT COUNT(*) FROM tipos_entidades WHERE te_id = {_data.te_id}";
                var cmd = new MySqlCommand(query, conn);
                int recordsCount = int.Parse(cmd.ExecuteScalar().ToString());

                //if exists already, just update
                if (recordsCount > 0)
                {
                    query = $"UPDATE tipos_entidades SET te_nombre = '{_data.te_nombre}' WHERE te_id = {_data.te_id}";

                }
                else //if does not exists, insert into
                {
                    query = $"INSERT INTO tipos_entidades (te_nombre) VALUES ('{_data.te_nombre}')";
                }
                //if not, add
                cmd = new MySqlCommand(query, conn);
                cmd.ExecuteNonQuery();
                if (recordsCount <= 0) //Recently inserted into the DB, so we need to update the ID generated by the DataBase
                {
                    _data = new TiposEntidadesData(cmd.LastInsertedId, _data.te_nombre);
                }
                wasAbleToPush = true;
            }
            catch (Exception ex)
            {
                wasAbleToPush = false;
                MessageBox.Show("Error tratando de actualizar los datos de la base de datos en DBTipoEntidad: " + ex.Message, "Exception Sample", MessageBoxButton.OK, MessageBoxImage.Warning);
            }
            return wasAbleToPush;
        }

        public bool DeleteFromDatabase(MySqlConnection conn)
        {
            bool deletedCorrectly = false;
            try
            {
                string query = $"DELETE FROM tipos_entidades WHERE te_id = {_data.te_id}";
                var cmd = new MySqlCommand(query, conn);
                cmd.ExecuteNonQuery();
                deletedCorrectly = true;
            }
            catch (Exception ex)
            {
                MessageBox.Show("Error tratando de eliminar una fila de la base de datos en DBTipoEntidad: " + ex.Message, "Exception Sample", MessageBoxButton.OK, MessageBoxImage.Warning);
            }
            return deletedCorrectly;
        }

        public TiposEntidadesData Data
        {
            get => _data;
            set {
                _data = value;
            }
        }

        public void SetName (string newName)
        {
            _data.te_nombre = newName;
        }

        public string GetName() => _data.te_nombre;

        public long GetID() => _data.te_id;

        public override string ToString()   {
            return _data.ToString();
        }
    }
    public struct EntidadesComercialesData
    {
        public EntidadesComercialesData(long id, long cuit, long dni, string rs, string email, string tel, string cel)
        {
            ec_id = id;
            ec_cuit = cuit;
            ec_dni = dni;
            ec_rs = rs;
            ec_email = email;
            ec_telefono = tel;
            ec_celular = cel;
        }
        //Class handles ec_em_id y ec_te_id since it is better to hold references to those dataTypes instead of values
        public long ec_id { get; }
        public long ec_cuit { get; set; }
        public long ec_dni { get; set; }
        public string ec_rs { get; set; }
        public string ec_email { get; set; }
        public string ec_telefono { get; set; }
        public string ec_celular { get; set; }
    }
    public class DBEntidades : DBInterface
    {
        private DBEmpresa _cuentaEmpresa;
        private EntidadesComercialesData _data;
        private DBTipoEntidad _tipoEntidad;
        public DBEntidades(DBEmpresa newCuenta, EntidadesComercialesData newData)
        {
            _cuentaEmpresa = newCuenta;
            _data = newData;
        }

        public DBEntidades(DBEmpresa newCuenta, long id, long cuit, string rs, long dni = -1, string email = "", string tel = "", string cel = "") : this(newCuenta, new EntidadesComercialesData(id, cuit, dni, rs, email, tel, cel)) { }
        public DBEntidades(DBEmpresa newCuenta, long cuit, string rs, long dni = -1, string email = "", string tel = "", string cel = "") : this(newCuenta, -1, cuit, rs, dni, email, tel, cel) { }

        public bool DeleteFromDatabase(MySqlConnection conn)
        {
            return false;
        }
        public bool PushToDatabase(MySqlConnection conn)
        {
            return false;
        }
    }
}
